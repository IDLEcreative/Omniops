{"version":3,"sources":["/Users/jamesguy/Omniops/__tests__/mocks/handlers.ts"],"sourcesContent":["import { http, HttpResponse } from 'msw'\n\nexport const handlers = [\n  // OpenAI API mock\n  http.post('https://api.openai.com/v1/chat/completions', ({ request }) => {\n    // Can vary response based on request content for more realistic testing\n    return HttpResponse.json({\n      id: 'chatcmpl-test',\n      object: 'chat.completion',\n      created: Date.now(),\n      model: 'gpt-4',\n      choices: [\n        {\n          index: 0,\n          message: {\n            role: 'assistant',\n            content: 'This is a test response from the AI assistant.',\n          },\n          finish_reason: 'stop',\n        },\n      ],\n      usage: {\n        prompt_tokens: 100,\n        completion_tokens: 50,\n        total_tokens: 150\n      }\n    })\n  }),\n\n  // OpenAI Embeddings API mock\n  http.post('https://api.openai.com/v1/embeddings', async ({ request }) => {\n    const body = await request.json() as any\n    const input = Array.isArray(body.input) ? body.input : [body.input]\n    \n    return HttpResponse.json({\n      object: 'list',\n      data: input.map((_, index) => ({\n        object: 'embedding',\n        index,\n        embedding: Array(1536).fill(0.1), // Mock embedding vector\n      })),\n      model: body.model || 'text-embedding-ada-002',\n      usage: {\n        prompt_tokens: input.length * 10,\n        total_tokens: input.length * 10\n      }\n    })\n  }),\n\n  // Supabase Auth mocks\n  http.post('*/auth/v1/token', () => {\n    return HttpResponse.json({\n      access_token: 'mock-access-token',\n      refresh_token: 'mock-refresh-token',\n      expires_in: 3600,\n      token_type: 'bearer',\n      user: {\n        id: 'mock-user-id',\n        email: 'test@example.com',\n        email_confirmed_at: new Date().toISOString(),\n        created_at: new Date().toISOString()\n      }\n    })\n  }),\n\n  http.post('*/auth/v1/signup', async ({ request }) => {\n    const body = await request.json() as any\n    return HttpResponse.json({\n      user: {\n        id: 'new-user-id',\n        email: body.email,\n        email_confirmed_at: null,\n        created_at: new Date().toISOString()\n      },\n      session: null // Requires email confirmation\n    })\n  }),\n\n  http.get('*/auth/v1/user', ({ request }) => {\n    const auth = request.headers.get('authorization')\n    if (auth && auth.includes('mock-access-token')) {\n      return HttpResponse.json({\n        id: 'mock-user-id',\n        email: 'test@example.com',\n        email_confirmed_at: new Date().toISOString()\n      })\n    }\n    return HttpResponse.json({ error: 'Invalid token' }, { status: 401 })\n  }),\n\n  // Supabase Database mocks\n  http.post('*/rest/v1/rpc/match_embeddings', async ({ request }) => {\n    return HttpResponse.json([\n      {\n        id: 'chunk-1',\n        chunk_text: 'Relevant content for the query',\n        page_id: 'page-1',\n        similarity: 0.85\n      },\n      {\n        id: 'chunk-2',\n        chunk_text: 'Another relevant piece of content',\n        page_id: 'page-2',\n        similarity: 0.75\n      }\n    ])\n  }),\n\n  http.get('*/rest/v1/scraped_pages', () => {\n    return HttpResponse.json([\n      {\n        id: 'page-1',\n        url: 'https://example.com/page1',\n        title: 'Test Page 1',\n        content: 'Content of test page 1',\n        last_scraped_at: new Date().toISOString()\n      }\n    ])\n  }),\n\n  http.post('*/rest/v1/conversations', async ({ request }) => {\n    const body = await request.json() as any\n    return HttpResponse.json({\n      id: 'conv-' + Date.now(),\n      session_id: body.session_id,\n      started_at: new Date().toISOString(),\n      metadata: body.metadata || {}\n    })\n  }),\n\n  http.post('*/rest/v1/messages', async ({ request }) => {\n    const body = await request.json() as any\n    return HttpResponse.json({\n      id: 'msg-' + Date.now(),\n      conversation_id: body.conversation_id,\n      role: body.role,\n      content: body.content,\n      created_at: new Date().toISOString()\n    })\n  }),\n\n  // Note: Firecrawl mock removed - now using Crawlee with Playwright for scraping\n\n  // WooCommerce API mocks\n  http.get('*/wp-json/wc/v3/products', ({ request }) => {\n    const url = new URL(request.url)\n    const search = url.searchParams.get('search')\n    \n    let products = [\n      {\n        id: 1,\n        name: 'Test Product',\n        price: '19.99',\n        regular_price: '19.99',\n        sale_price: '',\n        description: 'Test product description',\n        short_description: 'Test short description',\n        sku: 'TEST-001',\n        stock_status: 'instock',\n        stock_quantity: 100,\n        images: [{ src: 'https://example.com/image.jpg', alt: 'Product image' }],\n        categories: [{ id: 1, name: 'Test Category' }]\n      },\n      {\n        id: 2,\n        name: 'Another Product',\n        price: '29.99',\n        regular_price: '29.99',\n        sale_price: '24.99',\n        description: 'Another product description',\n        short_description: 'Another short description',\n        sku: 'TEST-002',\n        stock_status: 'instock',\n        stock_quantity: 50\n      }\n    ]\n\n    if (search) {\n      products = products.filter(p => \n        p.name.toLowerCase().includes(search.toLowerCase())\n      )\n    }\n\n    return HttpResponse.json(products)\n  }),\n\n  http.post('*/wp-json/wc/v3/products', async ({ request }) => {\n    const body = await request.json() as any\n    return HttpResponse.json({\n      id: Date.now(),\n      ...body,\n      date_created: new Date().toISOString(),\n      date_modified: new Date().toISOString()\n    })\n  }),\n\n  http.get('*/wp-json/wc/v3/products/:id', ({ params }) => {\n    return HttpResponse.json({\n      id: Number(params.id),\n      name: `Product ${params.id}`,\n      price: '19.99',\n      stock_status: 'instock'\n    })\n  }),\n\n  http.get('*/wp-json/wc/v3/orders', ({ request }) => {\n    const url = new URL(request.url)\n    const status = url.searchParams.get('status')\n    \n    let orders = [\n      {\n        id: 1,\n        number: '1001',\n        status: 'processing',\n        date_created: '2024-01-01T00:00:00',\n        total: '19.99',\n        billing: {\n          first_name: 'John',\n          last_name: 'Doe',\n          email: 'john@example.com',\n          phone: '+1234567890'\n        },\n        shipping: {\n          first_name: 'John',\n          last_name: 'Doe',\n          address_1: '123 Test St',\n          city: 'Test City',\n          state: 'TS',\n          postcode: '12345',\n          country: 'US'\n        },\n        line_items: [\n          {\n            id: 1,\n            name: 'Test Product',\n            product_id: 1,\n            quantity: 1,\n            total: '19.99',\n          },\n        ],\n      },\n      {\n        id: 2,\n        number: '1002',\n        status: 'completed',\n        date_created: '2024-01-02T00:00:00',\n        total: '29.99'\n      }\n    ]\n\n    if (status) {\n      orders = orders.filter(o => o.status === status)\n    }\n\n    return HttpResponse.json(orders)\n  }),\n\n  http.post('*/wp-json/wc/v3/orders', async ({ request }) => {\n    const body = await request.json() as any\n    return HttpResponse.json({\n      id: Date.now(),\n      number: String(1000 + Date.now() % 1000),\n      status: 'pending',\n      ...body,\n      date_created: new Date().toISOString()\n    })\n  }),\n\n  http.get('*/wp-json/wc/v3/customers', ({ request }) => {\n    const url = new URL(request.url)\n    const email = url.searchParams.get('email')\n    \n    const customers = [\n      {\n        id: 1,\n        email: 'customer1@example.com',\n        first_name: 'Alice',\n        last_name: 'Smith',\n        username: 'alice',\n        billing: {\n          email: 'customer1@example.com',\n          phone: '+1234567890'\n        }\n      },\n      {\n        id: 2,\n        email: 'customer2@example.com',\n        first_name: 'Bob',\n        last_name: 'Jones',\n        username: 'bob'\n      }\n    ]\n\n    if (email) {\n      return HttpResponse.json(\n        customers.filter(c => c.email === email)\n      )\n    }\n\n    return HttpResponse.json(customers)\n  }),\n\n  http.get('*/wp-json/wc/v3/coupons', () => {\n    return HttpResponse.json([\n      {\n        id: 1,\n        code: 'SAVE10',\n        amount: '10.00',\n        discount_type: 'fixed_cart',\n        usage_limit: 100,\n        usage_count: 25,\n        date_expires: null\n      },\n      {\n        id: 2,\n        code: 'PERCENT20',\n        amount: '20.00',\n        discount_type: 'percent',\n        usage_limit: null,\n        usage_count: 0,\n        date_expires: '2025-12-31T23:59:59'\n      }\n    ])\n  }),\n\n  http.get('*/wp-json/wc/v3/system_status', () => {\n    return HttpResponse.json({\n      environment: {\n        home_url: 'https://test-store.com',\n        site_url: 'https://test-store.com',\n        wp_version: '6.3.0',\n        wc_version: '8.2.0',\n        wp_memory_limit: 268435456,\n        wp_debug_mode: false,\n        wp_cron: true,\n        language: 'en_US',\n        server_info: 'nginx/1.18.0',\n        php_version: '8.1.0',\n        mysql_version: '8.0.30'\n      },\n      database: {\n        wc_database_version: '8.2.0',\n        database_prefix: 'wp_',\n        database_tables: {\n          woocommerce: {\n            wp_woocommerce_sessions: true,\n            wp_woocommerce_api_keys: true,\n            wp_woocommerce_attribute_taxonomies: true\n          }\n        }\n      },\n      active_plugins: [\n        {\n          plugin: 'woocommerce/woocommerce.php',\n          name: 'WooCommerce',\n          version: '8.2.0',\n          author_name: 'Automattic'\n        }\n      ],\n      security: {\n        secure_connection: true,\n        hide_errors: true\n      }\n    })\n  }),\n\n  // Reports endpoints\n  http.get('*/wp-json/wc/v3/reports/sales', () => {\n    return HttpResponse.json({\n      total_sales: '5000.00',\n      net_sales: '4500.00',\n      average_sales: '500.00',\n      total_orders: 100,\n      total_items: 150,\n      total_tax: '500.00',\n      total_shipping: '200.00',\n      total_refunds: 2,\n      total_discount: '100.00',\n      totals_grouped_by: 'day'\n    })\n  }),\n\n  http.get('*/wp-json/wc/v3/reports/top_sellers', () => {\n    return HttpResponse.json([\n      {\n        product_id: 1,\n        product_name: 'Test Product',\n        quantity: 50,\n        total: '999.50'\n      },\n      {\n        product_id: 2,\n        product_name: 'Another Product',\n        quantity: 30,\n        total: '899.70'\n      }\n    ])\n  }),\n\n  // Abandoned cart endpoint\n  http.get('*/wp-json/wc/v3/orders/abandoned', () => {\n    return HttpResponse.json([\n      {\n        id: 99,\n        status: 'pending',\n        date_created: new Date(Date.now() - 7200000).toISOString(), // 2 hours ago\n        billing: {\n          email: 'abandoned@example.com',\n          first_name: 'Abandoned',\n          last_name: 'Cart'\n        },\n        line_items: [\n          {\n            name: 'Abandoned Product',\n            quantity: 2,\n            total: '39.98'\n          }\n        ],\n        total: '39.98'\n      }\n    ])\n  })\n]"],"names":["handlers","http","post","request","HttpResponse","json","id","object","created","Date","now","model","choices","index","message","role","content","finish_reason","usage","prompt_tokens","completion_tokens","total_tokens","body","input","Array","isArray","data","map","_","embedding","fill","length","access_token","refresh_token","expires_in","token_type","user","email","email_confirmed_at","toISOString","created_at","session","get","auth","headers","includes","error","status","chunk_text","page_id","similarity","url","title","last_scraped_at","session_id","started_at","metadata","conversation_id","URL","search","searchParams","products","name","price","regular_price","sale_price","description","short_description","sku","stock_status","stock_quantity","images","src","alt","categories","filter","p","toLowerCase","date_created","date_modified","params","Number","orders","number","total","billing","first_name","last_name","phone","shipping","address_1","city","state","postcode","country","line_items","product_id","quantity","o","String","customers","username","c","code","amount","discount_type","usage_limit","usage_count","date_expires","environment","home_url","site_url","wp_version","wc_version","wp_memory_limit","wp_debug_mode","wp_cron","language","server_info","php_version","mysql_version","database","wc_database_version","database_prefix","database_tables","woocommerce","wp_woocommerce_sessions","wp_woocommerce_api_keys","wp_woocommerce_attribute_taxonomies","active_plugins","plugin","version","author_name","security","secure_connection","hide_errors","total_sales","net_sales","average_sales","total_orders","total_items","total_tax","total_shipping","total_refunds","total_discount","totals_grouped_by","product_name"],"mappings":"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"}