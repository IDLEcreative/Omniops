{"version":3,"sources":["/Users/jamesguy/Omniops/test-utils/jest.setup.msw.js"],"sourcesContent":["// Polyfill for TextEncoder/TextDecoder in Node environment\nif (typeof TextEncoder === 'undefined') {\n  const { TextEncoder, TextDecoder } = require('util');\n  global.TextEncoder = TextEncoder;\n  global.TextDecoder = TextDecoder;\n}\n\n// Polyfill for crypto.randomUUID\nif (typeof crypto === 'undefined' || !crypto.randomUUID) {\n  const { randomUUID } = require('crypto');\n  global.crypto = global.crypto || {};\n  global.crypto.randomUUID = randomUUID;\n}\n\n// Polyfill for TransformStream\nif (typeof TransformStream === 'undefined') {\n  const { TransformStream } = require('stream/web');\n  global.TransformStream = TransformStream;\n}\n\n// Polyfill for ReadableStream if not available\nif (typeof ReadableStream === 'undefined') {\n  const { ReadableStream } = require('stream/web');\n  global.ReadableStream = ReadableStream;\n}\n\n// Polyfill for WritableStream if not available\nif (typeof WritableStream === 'undefined') {\n  const { WritableStream } = require('stream/web');\n  global.WritableStream = WritableStream;\n}\n\n// Polyfill for BroadcastChannel\nif (typeof BroadcastChannel === 'undefined') {\n  global.BroadcastChannel = class BroadcastChannel {\n    constructor(name) {\n      this.name = name;\n      this.closed = false;\n      this.onmessage = null;\n      this.onmessageerror = null;\n    }\n\n    postMessage(message) {\n      // In test environment, we don't actually need to broadcast messages\n      // This is just a stub for MSW\n    }\n\n    close() {\n      this.closed = true;\n    }\n  };\n}\n\n// Polyfill for MessagePort and MessageChannel\nif (typeof MessagePort === 'undefined') {\n  global.MessagePort = class MessagePort {\n    constructor() {\n      this.onmessage = null;\n      this.onmessageerror = null;\n      this._otherPort = null;\n    }\n\n    postMessage(message) {\n      if (this._otherPort && this._otherPort.onmessage) {\n        setTimeout(() => {\n          this._otherPort.onmessage({ data: message });\n        }, 0);\n      }\n    }\n\n    start() {\n      // No-op for test environment\n    }\n\n    close() {\n      // No-op for test environment\n    }\n  };\n\n  global.MessageChannel = class MessageChannel {\n    constructor() {\n      this.port1 = new MessagePort();\n      this.port2 = new MessagePort();\n      this.port1._otherPort = this.port2;\n      this.port2._otherPort = this.port1;\n    }\n  };\n}\n\n// Polyfill for Response in Node environment\nif (typeof Response === 'undefined') {\n  global.Response = class Response {\n    constructor(body, init = {}) {\n      this.body = body;\n      this.status = init.status || 200;\n      this.statusText = init.statusText || 'OK';\n      this.headers = new Map(Object.entries(init.headers || {}));\n      this.ok = this.status >= 200 && this.status < 300;\n      this.redirected = false;\n      this.type = 'basic';\n      this.url = '';\n    }\n\n    json() {\n      return Promise.resolve(JSON.parse(this.body));\n    }\n\n    text() {\n      return Promise.resolve(this.body);\n    }\n\n    clone() {\n      return new Response(this.body, {\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n      });\n    }\n\n    arrayBuffer() {\n      return Promise.resolve(new ArrayBuffer(0));\n    }\n\n    blob() {\n      return Promise.resolve(new Blob([this.body]));\n    }\n  };\n}\n\n// Polyfill for Request in Node environment\nif (typeof Request === 'undefined') {\n  global.Request = class Request {\n    constructor(url, init = {}) {\n      // Store properties in private fields to avoid conflicts with read-only properties\n      const _url = url;\n      const _method = init.method || 'GET';\n      const _headers = init.headers ? \n        (init.headers instanceof Headers ? init.headers : new Headers(init.headers)) :\n        new Headers();\n      const _body = init.body;\n      const _mode = init.mode || 'cors';\n      const _credentials = init.credentials || 'same-origin';\n      const _cache = init.cache || 'default';\n      const _redirect = init.redirect || 'follow';\n      const _referrer = init.referrer || '';\n      const _integrity = init.integrity || '';\n      const _signal = init.signal || null;\n      const _duplex = init.duplex || undefined;\n      \n      // Define properties with getters to make them read-only\n      Object.defineProperty(this, 'url', {\n        get: () => _url,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'method', {\n        get: () => _method,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'headers', {\n        get: () => _headers,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'body', {\n        get: () => _body,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'mode', {\n        get: () => _mode,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'credentials', {\n        get: () => _credentials,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'cache', {\n        get: () => _cache,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'redirect', {\n        get: () => _redirect,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'referrer', {\n        get: () => _referrer,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'integrity', {\n        get: () => _integrity,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'signal', {\n        get: () => _signal,\n        enumerable: true,\n        configurable: false\n      });\n      \n      Object.defineProperty(this, 'duplex', {\n        get: () => _duplex,\n        enumerable: true,\n        configurable: false\n      });\n    }\n\n    clone() {\n      // Convert Headers to plain object for cloning\n      const headerObj = {};\n      this.headers.forEach((value, key) => {\n        headerObj[key] = value;\n      });\n      \n      return new Request(this.url, {\n        method: this.method,\n        headers: headerObj,\n        body: this.body,\n        mode: this.mode,\n        credentials: this.credentials,\n        cache: this.cache,\n        redirect: this.redirect,\n        referrer: this.referrer,\n        integrity: this.integrity,\n      });\n    }\n\n    json() {\n      return Promise.resolve(JSON.parse(this.body || '{}'));\n    }\n\n    text() {\n      return Promise.resolve(this.body || '');\n    }\n\n    arrayBuffer() {\n      return Promise.resolve(new ArrayBuffer(0));\n    }\n    \n    formData() {\n      return Promise.resolve(new FormData());\n    }\n  };\n}\n\n// Polyfill for Headers in Node environment\nif (typeof Headers === 'undefined') {\n  global.Headers = class Headers {\n    constructor(init) {\n      this.map = new Map();\n      \n      if (init) {\n        if (init instanceof Headers) {\n          init.forEach((value, key) => {\n            this.append(key, value);\n          });\n        } else if (Array.isArray(init)) {\n          init.forEach(([key, value]) => {\n            this.append(key, value);\n          });\n        } else if (typeof init === 'object') {\n          Object.entries(init).forEach(([key, value]) => {\n            this.append(key, value);\n          });\n        }\n      }\n    }\n\n    append(name, value) {\n      const key = name.toLowerCase();\n      if (this.map.has(key)) {\n        const existing = this.map.get(key);\n        this.map.set(key, `${existing}, ${value}`);\n      } else {\n        this.map.set(key, String(value));\n      }\n    }\n\n    get(name) {\n      return this.map.get(name.toLowerCase()) || null;\n    }\n\n    set(name, value) {\n      this.map.set(name.toLowerCase(), String(value));\n    }\n\n    has(name) {\n      return this.map.has(name.toLowerCase());\n    }\n\n    delete(name) {\n      return this.map.delete(name.toLowerCase());\n    }\n\n    forEach(callback, thisArg) {\n      this.map.forEach((value, key) => {\n        callback.call(thisArg, value, key, this);\n      });\n    }\n    \n    entries() {\n      return this.map.entries();\n    }\n    \n    keys() {\n      return this.map.keys();\n    }\n    \n    values() {\n      return this.map.values();\n    }\n  };\n}\n\n// Polyfill for fetch if not available\nif (typeof fetch === 'undefined') {\n  try {\n    global.fetch = require('node-fetch');\n  } catch (e) {\n    // If node-fetch is not available, create a basic mock\n    global.fetch = jest.fn(() =>\n      Promise.resolve({\n        json: () => Promise.resolve({}),\n        text: () => Promise.resolve(''),\n        ok: true,\n        status: 200,\n      })\n    );\n  }\n}\n\n// Polyfill for FormData if not available\nif (typeof FormData === 'undefined') {\n  global.FormData = class FormData {\n    constructor() {\n      this.data = new Map();\n    }\n\n    append(name, value) {\n      if (!this.data.has(name)) {\n        this.data.set(name, []);\n      }\n      this.data.get(name).push(value);\n    }\n\n    get(name) {\n      const values = this.data.get(name);\n      return values ? values[0] : null;\n    }\n\n    getAll(name) {\n      return this.data.get(name) || [];\n    }\n\n    has(name) {\n      return this.data.has(name);\n    }\n\n    delete(name) {\n      return this.data.delete(name);\n    }\n\n    forEach(callback) {\n      this.data.forEach((values, name) => {\n        values.forEach(value => callback(value, name, this));\n      });\n    }\n  };\n}\n\n// Polyfill for Blob if not available\nif (typeof Blob === 'undefined') {\n  global.Blob = class Blob {\n    constructor(parts = [], options = {}) {\n      this.parts = parts;\n      this.type = options.type || '';\n    }\n\n    get size() {\n      return this.parts.reduce((acc, part) => {\n        if (typeof part === 'string') {\n          return acc + part.length;\n        }\n        return acc + (part.size || 0);\n      }, 0);\n    }\n\n    text() {\n      return Promise.resolve(this.parts.join(''));\n    }\n  };\n}"],"names":["TextEncoder","TextDecoder","require","global","crypto","randomUUID","TransformStream","ReadableStream","WritableStream","BroadcastChannel","name","closed","onmessage","onmessageerror","postMessage","message","close","MessagePort","_otherPort","setTimeout","data","start","MessageChannel","port1","port2","Response","body","init","status","statusText","headers","Map","Object","entries","ok","redirected","type","url","json","Promise","resolve","JSON","parse","text","clone","arrayBuffer","ArrayBuffer","blob","Blob","Request","_url","_method","method","_headers","Headers","_body","_mode","mode","_credentials","credentials","_cache","cache","_redirect","redirect","_referrer","referrer","_integrity","integrity","_signal","signal","_duplex","duplex","undefined","defineProperty","get","enumerable","configurable","headerObj","forEach","value","key","formData","FormData","map","append","Array","isArray","toLowerCase","has","existing","set","String","delete","callback","thisArg","call","keys","values","fetch","e","jest","fn","push","getAll","parts","options","size","reduce","acc","part","length","join"],"mappings":"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"}