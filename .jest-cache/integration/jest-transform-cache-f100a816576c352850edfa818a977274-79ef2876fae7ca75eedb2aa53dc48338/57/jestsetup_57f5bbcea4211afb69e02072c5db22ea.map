{"version":3,"sources":["/Users/jamesguy/Omniops/test-utils/jest.setup.js"],"sourcesContent":["// Polyfills for MSW\nimport './jest.setup.msw'\n\n// Learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom'\nimport { server } from '../__tests__/mocks/server'\n\n// Set test environment\nprocess.env.NODE_ENV = 'test'\n\n// Mock environment variables\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'https://test.supabase.co'\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-anon-key'\nprocess.env.SUPABASE_SERVICE_ROLE_KEY = 'test-service-role-key'\nprocess.env.OPENAI_API_KEY = 'test-openai-key'\nprocess.env.ENCRYPTION_KEY = 'test-encryption-key-exactly-32ch'\nprocess.env.WOOCOMMERCE_URL = 'https://test-store.com'\nprocess.env.WOOCOMMERCE_CONSUMER_KEY = 'test-consumer-key'\nprocess.env.WOOCOMMERCE_CONSUMER_SECRET = 'test-consumer-secret'\n\n// Mock OpenAI to avoid browser detection issues in tests\njest.mock('openai', () => {\n  return jest.fn().mockImplementation(() => ({\n    chat: {\n      completions: {\n        create: jest.fn().mockResolvedValue({\n          choices: [{\n            message: {\n              content: 'Mocked response',\n              role: 'assistant',\n            },\n            finish_reason: 'stop',\n          }],\n        }),\n      },\n    },\n    embeddings: {\n      create: jest.fn().mockResolvedValue({\n        data: [{\n          embedding: Array(1536).fill(0.1),\n        }],\n      }),\n    },\n  }));\n});\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    refresh: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    prefetch: jest.fn(),\n  }),\n  useSearchParams: () => ({\n    get: jest.fn(),\n  }),\n  usePathname: () => '',\n}))\n\n// Mock Next.js headers and cookies\njest.mock('next/headers', () => ({\n  cookies: jest.fn(() => ({\n    get: jest.fn((name) => ({ name, value: 'mock-cookie-value' })),\n    getAll: jest.fn(() => []),\n    set: jest.fn(),\n    delete: jest.fn(),\n    has: jest.fn(() => false),\n  })),\n  headers: jest.fn(() => ({\n    get: jest.fn(() => null),\n    has: jest.fn(() => false),\n    set: jest.fn(),\n    delete: jest.fn(),\n    forEach: jest.fn(),\n  })),\n}))\n\n// Establish API mocking before all tests\nbeforeAll(() => server.listen({ onUnhandledRequest: 'error' }))\n\n// Reset any request handlers that we may add during the tests,\n// so they don't affect other tests\nafterEach(() => {\n  server.resetHandlers()\n  jest.clearAllMocks()\n})\n\n// Clean up after the tests are finished\nafterAll(() => server.close())"],"names":["jest","mock","fn","mockImplementation","chat","completions","create","mockResolvedValue","choices","message","content","role","finish_reason","embeddings","data","embedding","Array","fill","useRouter","push","replace","refresh","back","forward","prefetch","useSearchParams","get","usePathname","cookies","name","value","getAll","set","delete","has","headers","forEach","process","env","NODE_ENV","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","SUPABASE_SERVICE_ROLE_KEY","OPENAI_API_KEY","ENCRYPTION_KEY","WOOCOMMERCE_URL","WOOCOMMERCE_CONSUMER_KEY","WOOCOMMERCE_CONSUMER_SECRET","beforeAll","server","listen","onUnhandledRequest","afterEach","resetHandlers","clearAllMocks","afterAll","close"],"mappings":"AAAA,oBAAoB;;AAoBpB,yDAAyD;AACzDA,KAAKC,IAAI,CAAC,UAAU;IAClB,OAAOD,KAAKE,EAAE,GAAGC,kBAAkB,CAAC,IAAO,CAAA;YACzCC,MAAM;gBACJC,aAAa;oBACXC,QAAQN,KAAKE,EAAE,GAAGK,iBAAiB,CAAC;wBAClCC,SAAS;4BAAC;gCACRC,SAAS;oCACPC,SAAS;oCACTC,MAAM;gCACR;gCACAC,eAAe;4BACjB;yBAAE;oBACJ;gBACF;YACF;YACAC,YAAY;gBACVP,QAAQN,KAAKE,EAAE,GAAGK,iBAAiB,CAAC;oBAClCO,MAAM;wBAAC;4BACLC,WAAWC,MAAM,MAAMC,IAAI,CAAC;wBAC9B;qBAAE;gBACJ;YACF;QACF,CAAA;AACF;AAEA,sBAAsB;AACtBjB,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCiB,WAAW,IAAO,CAAA;gBAChBC,MAAMnB,KAAKE,EAAE;gBACbkB,SAASpB,KAAKE,EAAE;gBAChBmB,SAASrB,KAAKE,EAAE;gBAChBoB,MAAMtB,KAAKE,EAAE;gBACbqB,SAASvB,KAAKE,EAAE;gBAChBsB,UAAUxB,KAAKE,EAAE;YACnB,CAAA;QACAuB,iBAAiB,IAAO,CAAA;gBACtBC,KAAK1B,KAAKE,EAAE;YACd,CAAA;QACAyB,aAAa,IAAM;IACrB,CAAA;AAEA,mCAAmC;AACnC3B,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/B2B,SAAS5B,KAAKE,EAAE,CAAC,IAAO,CAAA;gBACtBwB,KAAK1B,KAAKE,EAAE,CAAC,CAAC2B,OAAU,CAAA;wBAAEA;wBAAMC,OAAO;oBAAoB,CAAA;gBAC3DC,QAAQ/B,KAAKE,EAAE,CAAC,IAAM,EAAE;gBACxB8B,KAAKhC,KAAKE,EAAE;gBACZ+B,QAAQjC,KAAKE,EAAE;gBACfgC,KAAKlC,KAAKE,EAAE,CAAC,IAAM;YACrB,CAAA;QACAiC,SAASnC,KAAKE,EAAE,CAAC,IAAO,CAAA;gBACtBwB,KAAK1B,KAAKE,EAAE,CAAC,IAAM;gBACnBgC,KAAKlC,KAAKE,EAAE,CAAC,IAAM;gBACnB8B,KAAKhC,KAAKE,EAAE;gBACZ+B,QAAQjC,KAAKE,EAAE;gBACfkC,SAASpC,KAAKE,EAAE;YAClB,CAAA;IACF,CAAA;;;;QA7EO;QAGA;wBACgB;AAEvB,uBAAuB;AACvBmC,QAAQC,GAAG,CAACC,QAAQ,GAAG;AAEvB,6BAA6B;AAC7BF,QAAQC,GAAG,CAACE,wBAAwB,GAAG;AACvCH,QAAQC,GAAG,CAACG,6BAA6B,GAAG;AAC5CJ,QAAQC,GAAG,CAACI,yBAAyB,GAAG;AACxCL,QAAQC,GAAG,CAACK,cAAc,GAAG;AAC7BN,QAAQC,GAAG,CAACM,cAAc,GAAG;AAC7BP,QAAQC,GAAG,CAACO,eAAe,GAAG;AAC9BR,QAAQC,GAAG,CAACQ,wBAAwB,GAAG;AACvCT,QAAQC,GAAG,CAACS,2BAA2B,GAAG;AA8D1C,yCAAyC;AACzCC,UAAU,IAAMC,cAAM,CAACC,MAAM,CAAC;QAAEC,oBAAoB;IAAQ;AAE5D,+DAA+D;AAC/D,mCAAmC;AACnCC,UAAU;IACRH,cAAM,CAACI,aAAa;IACpBrD,KAAKsD,aAAa;AACpB;AAEA,wCAAwC;AACxCC,SAAS,IAAMN,cAAM,CAACO,KAAK"}