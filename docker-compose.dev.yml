version: '3.8'

services:
  # Redis Service for development
  redis:
    image: redis:7-alpine
    container_name: omniops-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - omniops-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development app with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: omniops-app-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WATCHPACK_POLLING=true  # Enable hot reload in Docker
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - omniops-dev-network
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

volumes:
  redis-dev-data:
    driver: local

networks:
  omniops-dev-network:
    driver: bridge